{
  "info": {
    "_postman_id": "cami3d-api-collection",
    "name": "Cami3D Backend API",
    "description": "Cole√ß√£o completa da API do sistema de personaliza√ß√£o de camisetas 3D Cami3D\n\n### Como usar:\n1. Configure a vari√°vel `base_url` para `http://localhost:3001`\n2. Fa√ßa o registro/login para obter o token JWT\n3. Configure a vari√°vel `jwt_token` com o token recebido\n4. Execute os testes de cada endpoint\n\n### Autentica√ß√£o:\nA maioria dos endpoints requer autentica√ß√£o JWT. O token deve ser inclu√≠do no header:\n`Authorization: Bearer {{jwt_token}}`",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "design_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "image_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üè• Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": ["{{base_url}}"],
          "path": ["health"]
        },
        "description": "Verifica se a API est√° funcionando corretamente"
      },
      "response": []
    },
    {
      "name": "üîê Autentica√ß√£o",
      "item": [
        {
          "name": "Registrar Usu√°rio",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Salvar token JWT nas vari√°veis da cole√ß√£o",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('jwt_token', response.token);",
                  "        pm.collectionVariables.set('user_id', response.user.id);",
                  "        console.log('Token JWT salvo:', response.token);",
                  "    }",
                  "}",
                  "",
                  "// Testes de valida√ß√£o",
                  "pm.test('Status code √© 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Resposta cont√©m token', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Fulano de Tal\",\n    \"username\": \"fulano\",\n    \"email\": \"fulano@mail.com\",\n    \"password\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Registra um novo usu√°rio no sistema"
          },
          "response": []
        },
        {
          "name": "Login Usu√°rio",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Salvar token JWT nas vari√°veis da cole√ß√£o",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('jwt_token', response.token);",
                  "        pm.collectionVariables.set('user_id', response.user.id);",
                  "        console.log('Token JWT salvo:', response.token);",
                  "    }",
                  "}",
                  "",
                  "// Testes de valida√ß√£o",
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Resposta cont√©m token', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"fulano@mail.com\",\n    \"password\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Faz login de um usu√°rio existente"
          },
          "response": []
        },
        {
          "name": "Recupera√ß√£o de Senha",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"fulano@mail.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "forgot-password"]
            },
            "description": "Solicita recupera√ß√£o de senha por email"
          },
          "response": []
        }
      ],
      "description": "Endpoints para autentica√ß√£o de usu√°rios"
    },
    {
      "name": "üë§ Perfil do Usu√°rio",
      "item": [
        {
          "name": "Obter Perfil",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code √© 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Resposta cont√©m dados do usu√°rio', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "    pm.expect(jsonData.user).to.have.property('id');",
                  "    pm.expect(jsonData.user).to.have.property('email');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/user/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "user", "profile"]
            },
            "description": "Obt√©m o perfil do usu√°rio autenticado"
          },
          "response": []
        },
        {
          "name": "Atualizar Perfil",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Fulano Silva Santos\",\n    \"username\": \"fulano_atualizado\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/user/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "user", "profile"]
            },
            "description": "Atualiza o perfil do usu√°rio autenticado"
          },
          "response": []
        },
        {
          "name": "Alterar Senha",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"currentPassword\": \"123456\",\n    \"newPassword\": \"novasenha123\",\n    \"confirmPassword\": \"novasenha123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/user/change-password",
              "host": ["{{base_url}}"],
              "path": ["api", "user", "change-password"]
            },
            "description": "Altera a senha do usu√°rio autenticado"
          },
          "response": []
        },
        {
          "name": "Deletar Conta",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"password\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/user/account",
              "host": ["{{base_url}}"],
              "path": ["api", "user", "account"]
            },
            "description": "Remove permanentemente a conta do usu√°rio"
          },
          "response": []
        },
        {
          "name": "Estat√≠sticas do Usu√°rio",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/user/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "user", "stats"]
            },
            "description": "Retorna estat√≠sticas detalhadas sobre a atividade do usu√°rio"
          },
          "response": []
        }
      ],
      "description": "Endpoints para gerenciamento do perfil do usu√°rio"
    },
    {
      "name": "üì§ Upload de Arquivos",
      "item": [
        {
          "name": "Upload de Imagem",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Verificar se h√° arquivo anexado",
                  "const request = pm.request.body;",
                  "let hasFile = false;",
                  "",
                  "if (request && request.formdata) {",
                  "    const imageField = request.formdata.find(field => field.key === 'image');",
                  "    hasFile = imageField && imageField.src && imageField.src.length > 0;",
                  "}",
                  "",
                  "if (!hasFile) {",
                  "    console.log('‚ùå ERRO: Nenhum arquivo foi anexado ao campo image');",
                  "    console.log('üìã INSTRU√á√ïES:');",
                  "    console.log('1. V√° para Body ‚Üí form-data');",
                  "    console.log('2. Campo \"image\" deve ser tipo \"File\"');",
                  "    console.log('3. Clique em \"Select Files\" e escolha uma imagem');",
                  "    pm.test.skip('Teste pulado - arquivo n√£o anexado');",
                  "    return;",
                  "}",
                  "",
                  "// Verificar token",
                  "const token = pm.collectionVariables.get('jwt_token');",
                  "if (!token) {",
                  "    console.log('‚ùå ERRO: Token JWT n√£o encontrado');",
                  "    console.log('üìã Fa√ßa login primeiro no endpoint \"Login Usu√°rio\"');",
                  "    pm.test.skip('Teste pulado - sem token');",
                  "    return;",
                  "}",
                  "",
                  "// Salvar ID da imagem enviada",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.file && response.file.id) {",
                  "        pm.collectionVariables.set('image_id', response.file.id);",
                  "        console.log('‚úÖ ID da imagem salvo:', response.file.id);",
                  "    }",
                  "} else {",
                  "    console.log('‚ùå Upload failed. Status:', pm.response.code);",
                  "    console.log('üìÑ Response:', pm.response.text());",
                  "}",
                  "",
                  "pm.test('Status code √© 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Resposta cont√©m informa√ß√µes do arquivo', function () {",
                  "    if (pm.response.code === 201) {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData).to.have.property('file');",
                  "        pm.expect(jsonData.file).to.have.property('id');",
                  "        pm.expect(jsonData.file).to.have.property('url');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": "",
                  "description": "‚ö†Ô∏è IMPORTANTE: Clique em 'Select Files' e escolha uma imagem PNG, JPG ou SVG (m√°x 5MB). Use a test-image.png do projeto se quiser."
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/upload/image",
              "host": ["{{base_url}}"],
              "path": ["api", "upload", "image"]
            },
            "description": "Faz upload de uma imagem para uso nos designs"
          },
          "response": []
        }
      ],
      "description": "Endpoints para upload e gerenciamento de imagens"
    },
    {
      "name": "üëï Designs de Camisetas",
      "item": [
        {
          "name": "Salvar Design",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Salvar ID do design criado",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.tshirt && response.tshirt.id) {",
                  "        pm.collectionVariables.set('design_id', response.tshirt.id);",
                  "        console.log('ID do design salvo:', response.tshirt.id);",
                  "    }",
                  "}",
                  "",
                  "pm.test('Status code √© 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Resposta cont√©m dados do design', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('tshirt');",
                  "    pm.expect(jsonData.tshirt).to.have.property('id');",
                  "    pm.expect(jsonData.tshirt).to.have.property('config');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"color\": \"#ff0000\",\n    \"style\": \"crew-neck\",\n    \"text\": \"Camiseta do Fulano\",\n    \"textColor\": \"#ffffff\",\n    \"textSize\": 0.1,\n    \"name\": \"Design do Fulano\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tshirt/save",
              "host": ["{{base_url}}"],
              "path": ["api", "tshirt", "save"]
            },
            "description": "Salva um novo design de camiseta"
          },
          "response": []
        },
        {
          "name": "Meus Designs",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/tshirt/my-designs",
              "host": ["{{base_url}}"],
              "path": ["api", "tshirt", "my-designs"]
            },
            "description": "Lista todos os designs criados pelo usu√°rio"
          },
          "response": []
        },
        {
          "name": "Obter Design por ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/tshirt/{{design_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "tshirt", "{{design_id}}"]
            },
            "description": "Obt√©m um design espec√≠fico pelo ID (p√∫blico)"
          },
          "response": []
        },
        {
          "name": "Galeria P√∫blica",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/tshirt/public/gallery",
              "host": ["{{base_url}}"],
              "path": ["api", "tshirt", "public", "gallery"]
            },
            "description": "Lista designs p√∫blicos na galeria"
          },
          "response": []
        }
      ],
      "description": "Endpoints para cria√ß√£o e gerenciamento de designs de camisetas"
    },
    {
      "name": "üß™ Testes Avan√ßados",
      "item": [
        {
          "name": "Design com Logo Personalizado",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Design Premium do Fulano\",\n    \"color\": \"#0066cc\",\n    \"style\": \"crew-neck\",\n    \"text\": \"Fulano Store\",\n    \"textColor\": \"#ffffff\",\n    \"textSize\": 0.12,\n    \"textPosition\": {\n        \"x\": 0,\n        \"y\": -0.2\n    },\n    \"logo\": \"/uploads/logo-fulano.png\",\n    \"logoPosition\": {\n        \"x\": 0,\n        \"y\": 0.1\n    },\n    \"logoScale\": 0.8,\n    \"modelType\": \"procedural\",\n    \"renderQuality\": \"high\",\n    \"isPublic\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tshirt/save",
              "host": ["{{base_url}}"],
              "path": ["api", "tshirt", "save"]
            },
            "description": "Cria um design avan√ßado com logo e posicionamento personalizado"
          },
          "response": []
        },
        {
          "name": "Teste de Valida√ß√£o - Dados Inv√°lidos",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"color\": \"vermelho\",\n    \"style\": \"estilo-inexistente\",\n    \"textSize\": 2.0\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tshirt/save",
              "host": ["{{base_url}}"],
              "path": ["api", "tshirt", "save"]
            },
            "description": "Testa a valida√ß√£o com dados inv√°lidos (deve retornar erro 400)"
          },
          "response": []
        },
        {
          "name": "Teste sem Autentica√ß√£o",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/tshirt/my-designs",
              "host": ["{{base_url}}"],
              "path": ["api", "tshirt", "my-designs"]
            },
            "description": "Testa acesso a endpoint protegido sem token (deve retornar erro 401)"
          },
          "response": []
        }
      ],
      "description": "Testes avan√ßados para valida√ß√£o e casos especiais"
    }
  ]
}
